#pragma checksum "C:\Users\risd\source\repos\EmployeePayroll_v2\Views\Home\ReadMe.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "b313a2a8b3cecc26ca0db29d751d109ae2046d8dc31eb51e6004f3ba2c18a4a4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_ReadMe), @"mvc.1.0.view", @"/Views/Home/ReadMe.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\risd\source\repos\EmployeePayroll_v2\Views\_ViewImports.cshtml"
using EmployeePayroll_v2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\risd\source\repos\EmployeePayroll_v2\Views\_ViewImports.cshtml"
using EmployeePayroll_v2.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"b313a2a8b3cecc26ca0db29d751d109ae2046d8dc31eb51e6004f3ba2c18a4a4", @"/Views/Home/ReadMe.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"e4c004906f4a253c121514b5b6baa6879b27b61c459812871ba120dc8e1e3717", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Home_ReadMe : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\risd\source\repos\EmployeePayroll_v2\Views\Home\ReadMe.cshtml"
  
    ViewData["Title"] = "Read Me";

#line default
#line hidden
#nullable disable
            WriteLiteral("<h1>");
#nullable restore
#line 4 "C:\Users\risd\source\repos\EmployeePayroll_v2\Views\Home\ReadMe.cshtml"
Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h1>
<br />

<h4>What's next?</h4>
<h6>Back-end Server with REST API</h6>
<ul class=""list-unstyled"">
    <li>Being familiar with client-server architecture in VB.Net, the next version should have a true back-end server accessible</li>
    <li>via REST API.  This is necessary for the following reasons:
        <ul>
            <li>Have the flexibility to manage business rules and be transparent to the front-end.</li>
            <li>Be able to put more hardware resources on the back-end.</li>
            <li>Move the heavy-lifting in the back-end.</li>
            <li>Keep the front-end light.</li>
        </ul>
    </li>
</ul>

<h6>Registration, Login, Restrictions and Activity Tracking</h6>
<ul class=""list-unstyled"">
    <li>Add registration and login features to have security:
        <ul>
            <li>Empployee data is sensitive.  Only certain users should be able to access them.</li>
            <li>Prevent unauthorized use of the system.</li>
            <li>Security is a requi");
            WriteLiteral(@"rement for compliance to industry standards.</li>
        </ul>
    </li>
    <li>Add restrictions on data and features:
        <ul>
            <li>Even among authorized users, some data and features should be restricted depending on the user role.</li>
            <li>Compartmentation is a requirement for compliance to industry standards.</li>
        </ul>
    </li>
    <li>Add user and system activity tracking:
        <ul>
            <li>Whatever happens to the system, the activity logs are critical in analyzing any problem.</li>
            <li>Traceability is a requirement for compliance to industry standards.</li>
        </ul>
    </li>
</ul>

<h6>Improved and Customizable Front End</h6>
<ul class=""list-unstyled"">
    <li>Improve the user interface to be more user-friendly.</li>
    <li>Define custom user interface depending on user role:
        <ul>
            <li>Different user roles would want different layout of data.  For example, Finance people would want more employee");
            WriteLiteral(@" details.</li>
        </ul>
    </li>
</ul>
<br />

<h4>First-time Web Developer</h4>
<ul class=""list-unstyled"">
    <li>I had an opportunity to learn web development in C# as a requirement to this job that I was applying for.</li>
    <li>They gave a simple set of requirements which would have been easy to develop in a standard Windows application using VB.Net</li>
    <li>But it had to be as a web application in C#.</li>
    <li>I had no hands-on experience in writing programs in C#, much less developing a web application in it.</li>
    <li>
        So there lies the challenge.  I spent considerable time on this project, which could be broken down as follows:

        <table class=""table table-borderless""  cellspacing=""0"" cellpadding=""0"">
            <thead>
                <tr>
                    <th>Hours</th>
                    <th>Activity</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>9</td>
                 ");
            WriteLiteral(@"   <td>Installation of Visual Studio 2022 Community Edition and SQL Express</td>
                </tr>
                <tr class=""trNoSpace"">
                    <td>3</td>
                    <td>Trying to run the sample web app from the company but failing to do so</td>
                </tr>
                <tr class=""trNoSpace"">
                    <td>1</td>
                    <td>Find a suitable online course in web development in C#.  Found a great online course from Prof. Shad Sluiter.</td>
                </tr>
                <tr class=""trNoSpace"">
                    <td>15.5</td>
                    <td>Went half-way through the online course until I got confident to start on my one.</td>
                </tr>
                <tr class=""trNoSpace"">
                    <td>6</td>
                    <td>Developed version 1 of this application using ORM.</td>
                </tr>
                <tr class=""trNoSpace"">
                    <td>6</td>
                    <td>Develo");
            WriteLiteral(@"ped version 2 (final) of this application using DAO.</td>
                </tr>
                <tr class=""trNoSpace"">
                    <td>1</td>
                    <td>Wrote this lengthy READ ME page.</td>
                </tr>
                <tr class=""trNoSpace"">
                    <td>41.5</td>
                    <td>TOTAL</td>
                </tr>
            </tbody>
        </table>
    </li>
    <li>All in all, I spent 41.5 hours in this project including setup, online training, and actual development.</li>
    <li>Though not fast by any standard, I think I made significant progress in my journey to web development.</li>
</ul>
<br />


");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
